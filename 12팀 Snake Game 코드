//Delcare 전역변수
let s;
let scl = 30;
let food;
let egg, shrimp, salmon, img, star;
let bias = 5;
let playfield = 600;

//사용할 이미지 불러오기
  function preload() {
    img = loadImage("https://raw.githubusercontent.com/JoYeongBeom/img/main/%EB%8F%84%EB%A7%88.jpg")
    egg = loadImage( "https://raw.githubusercontent.com/JoYeongBeom/img/main/%EA%B3%84%EB%9E%80%EC%B4%88%EB%B0%A5.png"
  );
    shrimp = loadImage(    "https://raw.githubusercontent.com/JoYeongBeom/img/main/%EC%83%88%EC%9A%B0%EC%B4%88%EB%B0%A5.png");
    salmon = loadImage( "https://raw.githubusercontent.com/JoYeongBeom/img/main/%EC%97%B0%EC%96%B4%EC%B4%88%EB%B0%A5.png"
  );
    star = loadImage("https://raw.githubusercontent.com/JoYeongBeom/img/main/%EB%9A%B1%EC%9D%B4.png")
}

function setup() {
  createCanvas(playfield, 640);
  background(img);
  s = new Snake();
  frameRate (10);
  pickLocation();
}

function draw() {
  background(img);
  scoreboard();
  if (s.eat(food)) {   
    pickLocation();
    if (s.score % 10 == 0) {         // 10점 달성 시마다 frameRate 3씩 증가
      frameRate(frameRate() + 3);
    }
  }
  s.death();
  s.update();
  s.show();
  image(foodType, food.x, food.y, scl, scl); // 초밥 이미지 그리기
}

// 초밥이 나타날 위치 선택
function pickLocation() {
  let cols = floor(playfield/scl);
  let rows = floor(playfield/scl);
  let choice = floor(random(3));   // 계란, 새우, 연어 초밥 중 1가지가 랜덤하게 
  switch (choice) {
    case 0:
      food = createVector(floor(random(cols)), floor(random(rows)));
      food.mult(scl);
      foodType = egg;
      break;
    case 1:
      food = createVector(floor(random(cols)), floor(random(rows)));
      food.mult(scl);
      foodType = shrimp;
      break;
    case 2:
      food = createVector(floor(random(cols)), floor(random(rows)));
      food.mult(scl);
      foodType = salmon;
      break;
  for (let i = 0; i < s.tail.length; i++) {
    let pos = s.tail[i];
    let d = dist(food.x, food.y, pos.x, pos.y);
    if (d < 1) {
      pickLocation();
    }
  }
}
}
// 점수판
function scoreboard() {
  fill(0);
  rect(0, 600, 600, 40);
  fill(255);
  textFont("Georgia");
  textSize(18);
  text("Score: ", 10, 625);
  text("Highscore: ", 450, 625)
  text(s.score, 70, 625);
  text(s.highscore, 540, 625)
}

// CONTROLS function
function keyPressed() {
  if (keyCode === UP_ARROW){
      s.dir(0, -1);
  }else if (keyCode === DOWN_ARROW) {
      s.dir(0, 1);
  }else if (keyCode === RIGHT_ARROW) {
      s.dir (1, 0);
  }else if (keyCode === LEFT_ARROW) {
      s.dir (-1, 0);
  }
}

// SNAKE OBJECT
function Snake() {
  this.x =0;
  this.y =0;
  this.xspeed = 1;
  this.yspeed = 0;
  this.total = 0;
  this.tail = [];
  this.score = 1;
  this.highscore = 1;

  this.dir = function(x,y) {
    this.xspeed = x;
    this.yspeed = y;
  }

  this.eat = function(pos) {
    let d = dist(this.x, this.y, pos.x, pos.y);
    if (d < 1) {
      this.total++;
      this.score++;
      text(this.score, 70, 625);
      if (this.score > this.highscore) {
        this.highscore = this.score;
      }
      text(this.highscore, 540, 625);
      return true;
    } else {
      return false;
    }
  }

  this.death = function() {
    for (let i = 0; i < this.tail.length; i++) {
      let pos = this.tail[i];
      let d = dist(this.x, this.y, pos.x, pos.y);
      if (d < 1) {
        this.total = 0;
        this.score = 0;
        this.tail = [];
      }
    }
  }

  this.update = function(){
    if (this.total === this.tail.length) {
      for (let i = 0; i < this.tail.length-1; i++) {
        this.tail[i] = this.tail[i+1];
    }

    }
    this.tail[this.total-1] = createVector(this.x, this.y);

    this.x = this.x + this.xspeed*scl;
    this.y = this.y + this.yspeed*scl;

    this.x = constrain(this.x, 0, playfield-scl);
    this.y = constrain(this.y, 0, playfield-scl);


  }
  this.show = function(){
    fill(0,255, 150);
    for (let i = 0; i < this.tail.length; i++) {
      image(foodType,this.tail[i].x, this.tail[i].y, scl, scl); //뱀 꼬리모양을 먹은 초밥으로 설정
    }

    image(star, this.x, this.y, scl + bias, scl + bias); // 뚱이 를 뱀 머리로 설정
  }
}
